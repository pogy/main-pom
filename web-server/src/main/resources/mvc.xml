<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 设置使用注解的类所在的jar包 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <ref bean="stringHttpMessageConverter" />
            <ref bean="fastJsonHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:default-servlet-handler/>

    <mvc:interceptors>
        <!-- IP密度拦截器 - 发送短信-->
        <mvc:interceptor>
            <mvc:mapping path="/goodsUrlSearch.*"/>
            <mvc:mapping path="/uploadGoodsImg.*"/>

            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.shigu.interceptors.IpDensityInterceptor">
                <property name="minMillionSecond" value="5000"/>
                <property name="startNum" value="2"/>
                <property name="redisIO" ref="redisIO"/>
                <!--记录存活时间-->
                <property name="refuseSecond" value="20"/>
            </bean>
        </mvc:interceptor>

        <!--20180515 商品紧急密度拦截-->
        <mvc:interceptor>
            <mvc:mapping path="/*goods.*"/>
            <mvc:mapping path="/*search.*"/>
            <mvc:mapping path="/item.*"/>
            <bean class="com.shigu.interceptors.ItemIpDensityInterceptor">
                <property name="minMillionSecond" value="500"/>
                <property name="startNum" value="3"/>
                <property name="redisIO" ref="redisIO"/>
                <property name="refuseSecond" value="60"/>
            </bean>
        </mvc:interceptor>

        <!-- 手机密度拦截器 - 发送短信-->
        <mvc:interceptor>
            <mvc:mapping path="/loginPhoneVerification.*"/>
            <mvc:mapping path="/forgetPhoneVerification.*"/>
            <mvc:mapping path="/bindPhoneVerification.*"/>
            <mvc:mapping path="/registPhoneVerification.*"/>

            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.shigu.interceptors.PhoneDensityInterceptor">
                <property name="minMillionSecond" value="10000"/>
                <property name="startNum" value="1"/>
                <property name="redisIO" ref="redisIO"/>
                <!--记录存活时间-->
                <property name="refuseSecond" value="20"/>
            </bean>
        </mvc:interceptor>

        <!-- 用户密度拦截器 - 创建数据包-->
        <mvc:interceptor>
            <mvc:mapping path="/member/mk_mydp.*"/>
            <mvc:mapping path="/seller/jsonsynAlltbgoods.*"/>
            <mvc:mapping path="/seller/jsonSynAllGoods.*"/>
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.shigu.interceptors.UserDensityInterceptor">
                <property name="minMillionSecond" value="10000"/>
                <property name="startNum" value="1"/>
                <property name="redisIO" ref="redisIO"/>
                <!--记录存活时间-->
                <property name="refuseSecond" value="20"/>
            </bean>
        </mvc:interceptor>
        <!-- 用户密度拦截器 - 下载图片包-->
        <mvc:interceptor>
            <mvc:mapping path="/smallpic.*"/>
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.shigu.interceptors.UserDensityInterceptor">
                <property name="minMillionSecond" value="5000"/>
                <property name="startNum" value="1"/>
                <property name="redisIO" ref="redisIO"/>
                <!--记录存活时间-->
                <property name="refuseSecond" value="10"/>
            </bean>
        </mvc:interceptor>

        <!-- 用户密度拦截器 - 数据包上传 - -->
        <mvc:interceptor>
            <mvc:mapping path="/seller/noticeGoodsPackageUploaded.*"/>
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.shigu.interceptors.UserDensityInterceptor">
                <property name="minMillionSecond" value="10000"/>
                <property name="startNum" value="1"/>
                <property name="redisIO" ref="redisIO"/>
                <!--记录存活时间-->
                <property name="refuseSecond" value="20"/>
            </bean>
        </mvc:interceptor>

        <!-- 用户商品访问记录密度拦截器 - -->
        <mvc:interceptor>
            <mvc:mapping path="/monitor/*"/>
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.shigu.interceptors.PvDensityInterceptor">
                <property name="minMillionSecond" value="300000"/>
                <property name="startNum" value="80"/>
                <property name="redisIO" ref="redisIO"/>
                <!--记录存活时间-->
                <property name="refuseSecond" value="600"/>
            </bean>
        </mvc:interceptor>

    </mvc:interceptors>

    <!--app访问拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/app/**"/>
            <bean class="com.shigu.core.config.AppInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--app访问拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.shigu.core.config.GlobalInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.shigu.interceptors.UserLogInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean id="freemarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="cache" value="true"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="requestContextAttribute" value="request"/>
    </bean>

    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/templates/"/>
        <property name="freemarkerSettings">
            <map>
                <entry key="template_update_delay" value="0"/>
                <entry key="default_encoding" value="UTF-8"/>
                <entry key="number_format" value="0.#########"/>
                <entry key="datetime_format" value="yyyy-MM-dd HH:mm:ss"/>
                <entry key="classic_compatible" value="true"/>
                <entry key="template_exception_handler" value="html_debug"/>
            </map>
        </property>
        <property name="freemarkerVariables">
            <map>
                <entry key="shiro" value-ref="shiroTags"/>
            </map>
        </property>
    </bean>

    <bean id="shiroTags" class="com.jagregory.shiro.freemarker.ShiroTags"/>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters" ref="messageConverters">
        </property>
    </bean>


    <bean id="fastJsonHttpMessageConverter"
          class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">

        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value><!-- 避免IE出现下载JSON文件的情况 -->
            </list>
        </property>
    </bean>

    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8" index="0"></constructor-arg>
        <!--避免出现乱码 -->
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 返回类型定义 -->
    <util:list id="messageConverters">
        <ref bean="stringHttpMessageConverter" />
        <ref bean="fastJsonHttpMessageConverter" />
    </util:list>

    <!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760" />
    </bean>
</beans>