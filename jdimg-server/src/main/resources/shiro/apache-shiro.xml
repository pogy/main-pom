<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.0.xsd">
    <description>Shiro 配置</description>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/inv/memberLogin.htm"/>
        <property name="successUrl" value="/mainindex.htm"/>
        <property name="unauthorizedUrl" value="/inv/memberLogin.htm"/>
        <property name="filters">
            <map>
                <entry key="api" value-ref="tae_apiRequestFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /jdImgApi/** = api
                /** = anon
                <!--/** = anon-->
            </value>
        </property>
    </bean>

    <!-- <bean id="monitorRealm" class="com.shigu.component.shiro.MonitorRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"/>
                <property name="storedCredentialsHexEncoded" value="true"/>
                <property name="hashIterations" value="2" />
            </bean>
        </property>
    </bean> -->

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 基于ehCache来缓存用户认证信息和授权信息的实现 -->
        <property name="cacheManager" ref="cacheManagers"/>
        <!--<property name="sessionManager" ref="sessionManager"/>-->
        <!-- sessionMode参数设置为native时，那么shrio就将用户的基本认证信息保存到缺省名称为shiro-activeSessionCache 的Cache中 -->
        <!--<property name="sessionMode" value="native" />-->
        <!--设置自定义realm -->
        <!-- <property name="realm" ref="monitorRealm" /> -->
    </bean>

    <!--<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">-->
    <!--<property name="sessionDAO" ref="sessionDAO"/>-->
    <!--</bean>-->

    <!--<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">-->
    <!--</bean>-->

    <bean id="cacheManagers" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="ehCacheManagers"/>
        <property name="cacheManagerConfigFile" value="classpath:shiro/shiro-ehcache.xml"/>
    </bean>

    <bean id="ehCacheManagers" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          p:shared="true"/>


    <!-- securityManager -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


    <!-- AOP式方法级权限检查  -->
    <bean
            class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
            depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


</beans>